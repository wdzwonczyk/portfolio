---
const textLinks: { label: string; href: string }[] = [
	{ label: 'Home', href: '/portfolio/' },
	{ label: 'Work', href: '/portfolio/work/' },
	{ label: 'About', href: '/portfolio/about/' },
];
---

<nav class=" px-16 py-2 flex justify-center md:justify-between items-center w-full fixed z-[9999] duration-300">
	<div class="py-2">
		<a href="/portfolio/" class="flex items-center gap-x-2">
			<img
				src="/portfolio/assets/logo/logo.svg"
				alt="Logo Wojciech Dzwonczyk"
				class="h-6"
			/>
			Wojciech Dzwonczyk
		</a>
	</div>
	<div id="menu-content">
		<ul id="nav-items" class="flex flex-col items-center justify-center gap-6 md:gap-4 fixed bottom-0 right-0 transform transition-all ease-in-out duration-300 -translate-x-full h-[calc(100vh-56px)] w-full my-auto bg-white/90 backdrop-blur-lg md:backdrop-blur-none md:flex-row md:relative  md:bg-white md:h-auto md:justify-end md:transform-none md:px-3 md:py-4 md:gap-x-4 md:rounded-2xl md:shadow-md">
		{
			textLinks.map(({ label, href }) => (
				<li>
					<a
						aria-current={Astro.url.pathname === href}
						class:list={[
							'px-4 py-3 rounded-xl ease-in-out duration-300',
							{
								'bg-indigo-600 text-white w-1/3':
									Astro.url.pathname === href ||
									(href !== '/portfolio/' && Astro.url.pathname.startsWith(href)),
								"hover:bg-indigo-200": Astro.url.pathname !== href,
							},
							
						]}
						href={href}
					>
						{label}
					</a>
				</li>
			))
		}
		</ul>
	</div>
</nav>
<div id="hamburger-button" class="w-16 h-12 bg-indigo-600 flex justify-start items-center fixed top-1/2 -translate-y-1/2 right-0 z-[9999999] rounded-s-full md:hidden">
	<div class="w-10 h-10 ml-1 bg-white rounded-full flex justify-center items-center">
		<img 
			src="/portfolio/assets/icons/menu.svg",
			id="nav-icon"
			alt="Navigation icon"
			class="scale-100 duration-200"
		/>
	</div>
</div>
<script>
	//MOBILE NAVIGATION
	const burgerBtn = document.getElementById("hamburger-button") as HTMLElement;
	const navIcon = document.getElementById("nav-icon") as HTMLElement;
	const mobileNav = document.getElementById("nav-items") as HTMLElement;
	const body = document.body;

	function navIconProperties(src:string, alt:string){
		navIcon.setAttribute('src', src);
		navIcon.setAttribute('alt', alt);
	}

	function navIconToggle() {
		if (navIcon.getAttribute('src') == "/portfolio/assets/icons/menu.svg") {
			navIcon.classList.replace("scale-100", "scale-0");
			setTimeout( () => {
				navIconProperties('/portfolio/assets/icons/cancel.svg', 'Close navigation icon');
				navIcon.classList.replace("scale-0", "scale-100");
			}, 200);	
		} else {
			navIcon.classList.replace("scale-100", "scale-0");
			setTimeout( () => {
				navIconProperties('/portfolio/assets/icons/menu.svg', 'Navigation icon');
				navIcon.classList.replace("scale-0", "scale-100");
			}, 200);
		}
	}

	function openCloseNav(){
		mobileNav.classList.toggle('-translate-x-full');
		body.classList.toggle('overflow-hidden');
		navIconToggle();
	}

	burgerBtn.addEventListener("click", () => openCloseNav());

	//STICKY NAV
	const nav = document.querySelector('nav') as HTMLElement;

	window.addEventListener('scroll', () => {
		if (window.scrollY > 50) {
			nav.classList.add('bg-white', 'md:bg-white/90', 'md:backdrop-blur-lg');
			console.log('classes added');
			
		} else {
			nav.classList.remove('bg-white', 'md:bg-white/90', 'md:backdrop-blur-lg');
			console.log('classes removed');
		}
	});
</script>
